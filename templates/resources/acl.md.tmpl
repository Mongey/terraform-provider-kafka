---
page_title: "{{.Name}} {{.Type}} - {{.ProviderName}}"
subcategory: ""
description: |-
  A resource for managing Kafka Access Control Lists (ACLs) to control permissions for users and applications.
---

# {{.Name}} ({{.Type}})

The `kafka_acl` resource manages Apache Kafka Access Control Lists (ACLs). ACLs control access to Kafka resources like topics, consumer groups, and clusters by defining which principals (users or services) can perform specific operations on these resources.

## Example Usage

### Allow Producer Access to Topic

{{tffile "examples/resources/kafka_acl/producer.tf"}}

### Allow Consumer Group Access

{{tffile "examples/resources/kafka_acl/consumer.tf"}}

### Prefix-Based Access Control

{{tffile "examples/resources/kafka_acl/prefix.tf"}}

### Admin User with Full Access

{{tffile "examples/resources/kafka_acl/admin.tf"}}

## Import

Kafka ACLs can be imported using a pipe-delimited string containing all ACL properties:

{{codefile "shell" "examples/resources/kafka_acl/import.sh"}}

-> **Note:** Use quotes around the import string to prevent shell expansion of the `*` character.

{{ .SchemaMarkdown | trimspace }}

## Argument Reference

### acl_principal
Principal that is being allowed or denied access. Format depends on your authentication mechanism:
- For SASL/PLAIN, SASL/SCRAM: `User:username`
- For mTLS: `User:CN=certificate-common-name`
- For Kerberos: `User:principal@REALM`

### acl_host
Host from which the principal will have access. Use `*` to allow access from any host.

### acl_operation
The operation being controlled. Valid values:
- `Unknown`
- `Any`
- `All`
- `Read`
- `Write`
- `Create`
- `Delete`
- `Alter`
- `Describe`
- `ClusterAction`
- `DescribeConfigs`
- `AlterConfigs`
- `IdempotentWrite`

### acl_permission_type
Whether to allow or deny the operation. Valid values:
- `Unknown`
- `Any`
- `Allow`
- `Deny`

### resource_name
The name of the resource. Can be:
- Specific resource name (e.g., "my-topic")
- Wildcard `*` for all resources
- Prefix when used with `resource_pattern_type_filter = "Prefixed"`

### resource_type
The type of resource being secured. Valid values:
- `Unknown`
- `Any`
- `Topic`
- `Group`
- `Cluster`
- `TransactionalID`
- `DelegationToken`

### resource_pattern_type_filter
How to match the resource name. Valid values:
- `Literal` (default) - Exact match
- `Prefixed` - Match resources with the given prefix
- `Any` - Match any resource
- `Match` - Match resources using pattern

## Common ACL Patterns

### Producer ACLs
Producers typically need:
- `Write` and `Describe` on topics
- `Write` on `TransactionalID` (for transactional producers)
- `IdempotentWrite` on `Cluster` (for idempotent producers)

### Consumer ACLs
Consumers typically need:
- `Read` on topics
- `Read` on consumer groups
- `Describe` on topics (optional, for metadata)

### Admin ACLs
Administrators typically need:
- `All` on `Cluster`
- Or specific operations like `Alter`, `AlterConfigs`, `Create`, `Delete`

~> **Warning:** Be cautious with `Deny` ACLs as they take precedence over `Allow` ACLs. A deny rule will block access even if an allow rule exists.